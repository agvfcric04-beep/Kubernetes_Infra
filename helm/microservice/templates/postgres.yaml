{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "microservice.postgresName" . }}
  labels:
    app.kubernetes.io/name: {{ include "microservice.postgresName" . }}
    app.kubernetes.io/instance: {{ include "microservice.fullname" . }}
    app.kubernetes.io/component: database
spec:
  serviceName: {{ include "microservice.postgresName" . }}
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "microservice.postgresName" . }}
      app.kubernetes.io/instance: {{ include "microservice.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "microservice.postgresName" . }}
        app.kubernetes.io/instance: {{ include "microservice.fullname" . }}
    spec:
      securityContext:
        runAsUser: 999
        runAsNonRoot: true
        fsGroup: 999
      containers:
        - name: postgres
          image: {{ .Values.postgresql.image }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret }}
                  key: password
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U $POSTGRES_USER
            initialDelaySeconds: 10
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 2Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.postgresql.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.postgresql.storageSize }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "microservice.postgresName" . }}
spec:
  selector:
    app.kubernetes.io/name: {{ include "microservice.postgresName" . }}
    app.kubernetes.io/instance: {{ include "microservice.fullname" . }}
  ports:
    - port: 5432
      targetPort: 5432
      name: postgres
{{- end }}
